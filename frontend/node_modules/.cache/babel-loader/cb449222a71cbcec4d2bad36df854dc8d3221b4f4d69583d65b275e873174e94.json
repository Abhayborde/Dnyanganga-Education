{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\abc\\\\newlogin\\\\frontend\\\\src\\\\pages\\\\Admin\\\\RegisterAdmin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterAdmin = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [mobileNumber, setMobileNumber] = useState('');\n  const handleRegister = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      alert('Passwords do not match');\n      return;\n    }\n    try {\n      await axios.post('/admin/register', {\n        email,\n        password,\n        mobile_number: mobileNumber\n      });\n      alert('Admin registered successfully');\n    } catch (err) {\n      alert('Registration failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleRegister,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Confirm Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Mobile Number: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: mobileNumber,\n        onChange: e => setMobileNumber(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterAdmin, \"/BuKW2yJSrLUtV4+xmHTb2RmDvE=\");\n_c = RegisterAdmin;\nexport default RegisterAdmin;\nvar _c;\n$RefreshReg$(_c, \"RegisterAdmin\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","RegisterAdmin","_s","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","mobileNumber","setMobileNumber","handleRegister","e","preventDefault","alert","post","mobile_number","err","onSubmit","children","type","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ACER/abc/newlogin/frontend/src/pages/Admin/RegisterAdmin.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from '../../services/api';\r\n\r\nconst RegisterAdmin = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [mobileNumber, setMobileNumber] = useState('');\r\n\r\n    const handleRegister = async (e) => {\r\n        e.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            alert('Passwords do not match');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await axios.post('/admin/register', { email, password, mobile_number: mobileNumber });\r\n            alert('Admin registered successfully');\r\n        } catch (err) {\r\n            alert('Registration failed');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleRegister}>\r\n            <label>Email: <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} /></label>\r\n            <label>Password: <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} /></label>\r\n            <label>Confirm Password: <input type=\"password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} /></label>\r\n            <label>Mobile Number: <input type=\"text\" value={mobileNumber} onChange={(e) => setMobileNumber(e.target.value)} /></label>\r\n            <button type=\"submit\">Register</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default RegisterAdmin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}