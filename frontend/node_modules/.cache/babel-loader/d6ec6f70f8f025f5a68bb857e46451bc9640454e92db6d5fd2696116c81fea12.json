{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\abc\\\\newlogin\\\\frontend\\\\src\\\\routes\\\\ProtectedRoute.jsx\";\nimport React from 'react';\nimport { Route, Navigate, Outlet } from 'react-router-dom';\n\n// A sample function that checks if the user is authenticated\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isAuthenticated = () => {\n  // Replace with your actual authentication logic (e.g., checking a token)\n  return localStorage.getItem('user') !== null; // Example check\n};\nconst ProtectedRoute = ({\n  children\n}) => {\n  return isAuthenticated() ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 41\n  }, this);\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Route","Navigate","Outlet","jsxDEV","_jsxDEV","isAuthenticated","localStorage","getItem","ProtectedRoute","children","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ACER/abc/newlogin/frontend/src/routes/ProtectedRoute.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Route, Navigate, Outlet } from 'react-router-dom';\r\n\r\n// A sample function that checks if the user is authenticated\r\nconst isAuthenticated = () => {\r\n  // Replace with your actual authentication logic (e.g., checking a token)\r\n  return localStorage.getItem('user') !== null;  // Example check\r\n};\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  return isAuthenticated() ? children : <Navigate to=\"/login\" />;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;;AAE1D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC5B;EACA,OAAOC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAE;AACjD,CAAC;AAED,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACvC,OAAOJ,eAAe,CAAC,CAAC,GAAGI,QAAQ,gBAAGL,OAAA,CAACH,QAAQ;IAACS,EAAE,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAChE,CAAC;AAACC,EAAA,GAFIP,cAAc;AAIpB,eAAeA,cAAc;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}